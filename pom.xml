<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wso2</groupId>
        <artifactId>wso2</artifactId>
        <version>5</version>
    </parent>

    <groupId>org.wso2.extension.siddhi.execution.extrema</groupId>
    <artifactId>siddhi-execution-extrema-parent</artifactId>
    <version>4.0.10-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Siddhi Execution Extrema Extension Parent</name>
    <url>http://wso2.org</url>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>component</module>
            </modules>
        </profile>
        <profile>

          <id>coverage</id>

          <build>

              <plugins>

                  <plugin>

                      <groupId>org.apache.maven.plugins</groupId>

                      <artifactId>maven-surefire-plugin</artifactId>

                      <configuration>

                          <argLine>${jacoco.agent.ut.arg}</argLine>

                          <!-- Specific to generate mapping between tests and covered code -->

                          <properties>

                              <property>

                                  <name>listener</name>

                                  <value>org.sonar.java.jacoco.JUnitListener</value>

                              </property>

                          </properties>

                          <!-- test failure ignore -->

                          <testFailureIgnore>true</testFailureIgnore>

                      </configuration>

                  </plugin>

                  <plugin>

                      <groupId>org.apache.maven.plugins</groupId>

                      <artifactId>maven-failsafe-plugin</artifactId>

                      <configuration>

                          <argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg}

                          </argLine>

                          <!-- Specific to generate mapping between tests and covered code -->

                          <properties>

                              <property>

                                  <name>listener</name>

                                  <value>org.sonar.java.jacoco.JUnitListener</value>

                              </property>

                          </properties>

                          <!-- Let's put failsafe reports with surefire to have access to tests 

                              failures/success reports in sonar -->

                          <reportsDirectory>${project.build.directory}/surefire-reports

                          </reportsDirectory>

                      </configuration>

                  </plugin>

                  <plugin>

                      <groupId>org.jacoco</groupId>

                      <artifactId>jacoco-maven-plugin</artifactId>

                      <version>${jacoco.version}</version>

                      <executions>

                          <!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info 

                              to be passed to the JVM hosting the code being tested. -->

                          <execution>

                              <id>prepare-ut-agent</id>

                              <phase>process-test-classes</phase>

                              <goals>

                                  <goal>prepare-agent</goal>

                              </goals>

                              <configuration>

                                  <destFile>${sonar.jacoco.reportPath}</destFile>

                                  <propertyName>jacoco.agent.ut.arg</propertyName>

                                  <append>true</append>

                              </configuration>

                          </execution>

                          <!-- Prepares a variable, jacoco.agent.it.arg, that contains the info 

                              to be passed to the JVM hosting the code being tested. -->

                          <execution>

                              <id>prepare-it-agent</id>

                              <phase>pre-integration-test</phase>

                              <goals>

                                  <goal>prepare-agent</goal>

                              </goals>

                              <configuration>

                                  <destFile>${sonar.jacoco.itReportPath}</destFile>

                                  <propertyName>jacoco.agent.it.arg</propertyName>

                                  <append>true</append>

                              </configuration>

                          </execution>

                      </executions>

                  </plugin>

              </plugins>

          </build>

          <dependencies>

              <dependency>

                  <groupId>org.codehaus.sonar-plugins.java</groupId>

                  <artifactId>sonar-jacoco-listeners</artifactId>

                  <version>${sonar-jacoco-listeners.version}</version>

                  <scope>test</scope>

              </dependency>

          </dependencies>

      </profile>
        
    </profiles>

    <properties>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <siddhi.version>4.0.4</siddhi.version>
        <siddhi.extension.kalman.filter.version>4.0.5</siddhi.extension.kalman.filter.version>
        <log4j.version>1.2.17.wso2v1</log4j.version>
        <commons-math3.version>3.2</commons-math3.version>
        <jama.version>1.0.3</jama.version>
        <testng.version>6.8</testng.version>
        <jacoco.version>0.7.9</jacoco.version>
        <mavan.findbugsplugin.exclude.file>findbugs-exclude.xml</mavan.findbugsplugin.exclude.file>
        <maven.build.timestamp.format>MM.yyyy</maven.build.timestamp.format>

        <yearMonth>${maven.build.timestamp}</yearMonth>    

        <!-- ************************-->

        <!-- Sonar/Reporting settings -->

        <!-- ************************-->

        <!-- Sonar/Jacoco integration. Note that these properties need to be defined outside the "coverage" profile

        because we want to be to able to execute mvn sonar:sonar without passing a profile -->

        <!-- Tells Sonar to use jacoco for coverage results -->

        <sonar.projectKey>MyProjectKey</sonar.projectKey>

        <sonar.projectName>My Project</sonar.projectName>

         <sonar.projectVersion>${yearMonth}</sonar.projectVersion>

        <sonar.language>java</sonar.language>

        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>

        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

        <!-- Jacoco version to use -->

        <jacoco.version>0.7.2.201409121644</jacoco.version>

        <!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->

        <sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>

        <!-- Don't let Sonar execute tests. We will ask it to Maven 'sonar.dynamicAnalysis' is deprecated since version 4.3 and should no longer be used. -->

        <!-- <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis> -->

        <!-- The system property jacoco.outputDir needs to be override on the command line

            with an absolute path if you want to merge results from all modules.

            Example in a Jenkisn build where ${WORKSPACE} is defined and your project in the root directory of the workspace :

            mvn clean install -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target

            Note that unfortunately using the following does not work because of

            http://jira.codehaus.org/browse/SONAR-3427:

        <jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir>

        -->

        <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>

        <!-- Jacoco output file for UTs -->

        <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>

        <!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->

        <sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>

        <!-- Jacoco output file for ITs -->

        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>

        <!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->

        <sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
    </properties>

    <scm>
        <connection>scm:git:https://github.com/wso2-extensions/siddhi-execution-extrema.git
        </connection>
        <url>https://github.com/wso2-extensions/siddhi-execution-extrema.git</url>
        <developerConnection>scm:git:https://github.com/wso2-extensions/siddhi-execution-extrema.git
        </developerConnection>
        <tag>HEAD</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wso2.siddhi</groupId>
                <artifactId>siddhi-core</artifactId>
                <version>${siddhi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wso2.siddhi</groupId>
                <artifactId>siddhi-query-api</artifactId>
                <version>${siddhi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wso2.extension.siddhi.execution.kalmanfilter</groupId>
                <artifactId>siddhi-execution-kalman-filter</artifactId>
                <version>${siddhi.extension.kalman.filter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.log4j.wso2</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.mail</groupId>
                        <artifactId>mail</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.jms</groupId>
                        <artifactId>jms</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.jdmk</groupId>
                        <artifactId>jmxtools</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.jmx</groupId>
                        <artifactId>jmxri</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>${commons-math3.version}</version>
            </dependency>
            <dependency>
                <groupId>gov.nist.math</groupId>
                <artifactId>jama</artifactId>
                <version>${jama.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jacoco</groupId>
                <artifactId>org.jacoco.agent</artifactId>
                <classifier>runtime</classifier>
                <version>${jacoco.version}</version>
            </dependency> 
        </dependencies>
    </dependencyManagement>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>2.1</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <preparationGoals>clean install -Pdocumentation-deploy</preparationGoals>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>2.3.5</version>
                    <extensions>true</extensions>
                    <configuration>
                        <obrRepository>NONE</obrRepository>
                        <instructions>
                            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                            <Bundle-Name>${project.artifactId}</Bundle-Name>
                            <Export-Package>
                                org.wso2.extension.siddhi.execution.extrema,
                            </Export-Package>
                            <Import-Package>
                                *;resolution:=optional
                            </Import-Package>
                            <Include-Resource>
                                META-INF=target/classes/META-INF
                            </Include-Resource>
                        </instructions>
                    </configuration>
                </plugin>
                <plugin><!-- Overridden from parent pom to exclude generated sources -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${maven.findbugsplugin.version}</version>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>Medium</threshold>
                        <xmlOutput>true</xmlOutput>
                        <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
                        <!--Exclude sources-->
                        <excludeFilterFile>${mavan.findbugsplugin.exclude.file}</excludeFilterFile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>analyze-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>wso2.releases</id>
            <name>WSO2 internal Repository</name>
            <url>http://maven.wso2.org/nexus/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
                <checksumPolicy>ignore</checksumPolicy>
            </releases>
        </pluginRepository>
        <pluginRepository>
            <id>wso2.snapshots</id>
            <name>Apache Snapshot Repository</name>
            <url>http://maven.wso2.org/nexus/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
        <pluginRepository>
            <id>wso2-nexus</id>
            <name>WSO2 internal Repository</name>
            <url>http://maven.wso2.org/nexus/content/groups/wso2-public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
                <checksumPolicy>ignore</checksumPolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>wso2-nexus</id>
            <name>WSO2 internal Repository</name>
            <url>http://maven.wso2.org/nexus/content/groups/wso2-public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
                <checksumPolicy>ignore</checksumPolicy>
            </releases>
        </repository>
        <repository>
            <id>wso2.releases</id>
            <name>WSO2 internal Repository</name>
            <url>http://maven.wso2.org/nexus/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
                <checksumPolicy>ignore</checksumPolicy>
            </releases>
        </repository>
        <repository>
            <id>wso2.snapshots</id>
            <name>WSO2 Snapshot Repository</name>
            <url>http://maven.wso2.org/nexus/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <name>WSO2 Release Distribution Repository</name>
            <url>http://maven.wso2.org/nexus/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>wso2.snapshots</id>
            <name>Apache Snapshot Repository</name>
            <url>http://maven.wso2.org/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>
